import random, os, time, sys

tabtetris = []
for i in range(20):
    linha = []
    for c in range(10):
        linha.append("â¬œ")
    tabtetris.append(linha)

#  peÃ§as
I = ["ğŸŸ¥", "ğŸŸ¥", "ğŸŸ¥", "ğŸŸ¥"]
T = [["ğŸŸ¥", "ğŸŸ¥", "ğŸŸ¥"],
    [" ", "ğŸŸ¥", " "]]
O = [["ğŸŸ¥", "ğŸŸ¥"],
    ["ğŸŸ¥", "ğŸŸ¥"]]
S = [[" ", "ğŸŸ¥", "ğŸŸ¥"],
    ["ğŸŸ¥", "ğŸŸ¥", " "]]
Z = [["ğŸŸ¥", "ğŸŸ¥", " "],
    [" ", "ğŸŸ¥", "ğŸŸ¥"]]
J = [["ğŸŸ¥", " ", " "],
    ["ğŸŸ¥", "ğŸŸ¥", "ğŸŸ¥"]]
L = [[" ", " ", "ğŸŸ¥"],
    ["ğŸŸ¥", "ğŸŸ¥", "ğŸŸ¥"]]

letras = [I, T, O, S, Z, J, L]

def print_tabtetris():
    os.system('clear' if os.name == 'posix' else 'cls')
    for linha in tabtetris:
        print("".join(linha))
    print("\n")

def colocar_letra(letra, linha, coluna):
    if len(letra) > 0 and type(letra[0]) == list:
        for i in range(len(letra)):
            for j in range(len(letra[0])):
                if letra[i][j] == "ğŸŸ¥":
                    if linha + i < 20 and coluna + j < 10:
                        tabtetris[linha + i][coluna + j] = "ğŸŸ¥"
    else:
        for j in range(len(letra)):
            if coluna + j < 10:
                tabtetris[linha][coluna + j] = letra[j]

def verificar_colisao(letra, linha, coluna):
    if len(letra) > 0 and type(letra[0]) == list:
        for i in range(len(letra)):
            for j in range(len(letra[0])):
                if letra[i][j] == "ğŸŸ¥":
                    if linha + i >= 20 or coluna + j >= 10 or coluna + j < 0 or tabtetris[linha + i][coluna + j] == "ğŸŸ¥":
                        return True
    else:
        for j in range(len(letra)):
            if linha >= 20 or coluna + j >= 10 or coluna + j < 0 or tabtetris[linha][coluna + j] == "ğŸŸ¥":
                return True
    return False

# Escolher uma peÃ§a aleatÃ³ria
letra_atual = random.choice(letras)

# Inicializar a peÃ§a na primeira linha
linha_atual = 0
coluna_atual = 0

# mover bloco por tempo
while True:
    print_tabtetris()
    time.sleep(0.5)

    # apagar posicao anterior
    if type(letra_atual[0]) == list:
        for k in range(len(letra_atual)):
            for l in range(len(letra_atual[0])):
                if letra_atual[k][l] == "ğŸŸ¥":
                    if linha_atual + k < 20 and coluna_atual + l < 10:
                        tabtetris[linha_atual + k][coluna_atual + l] = "â¬œ"
    else:
        for j in range(len(letra_atual)):
            if linha_atual < 20 and coluna_atual + j < 10:
                tabtetris[linha_atual][coluna_atual + j] = "â¬œ"


    # bloco pra proxima linha
    linha_atual += 1

    if verificar_colisao(letra_atual, linha_atual, coluna_atual):
        linha_atual -= 1
        if type(letra_atual[0]) == list:
            for k in range(len(letra_atual)):
                for l in range(len(letra_atual[0])):
                    if letra_atual[k][l] == "ğŸŸ¥":
                        if linha_atual + k < 20 and coluna_atual + l < 10:
                            tabtetris[linha_atual + k][coluna_atual + l] = "ğŸŸ¥"
        else:
            for j in range(len(letra_atual)):
                if linha_atual < 20 and coluna_atual + j < 10:
                    tabtetris[linha_atual][coluna_atual + j] = letra_atual[j]

        # nova peÃ§a
        letra_atual = random.choice(letras)
        linha_atual = 0
        coluna_atual = 0

    else:
        if type(letra_atual[0]) == list:
            for k in range(len(letra_atual)):
                for l in range(len(letra_atual[0])):
                    if letra_atual[k][l] == "ğŸŸ¥":
                        if linha_atual + k < 20 and coluna_atual + l < 10:
                            tabtetris[linha_atual + k][coluna_atual + l] = "ğŸŸ¥"
        else:
            for j in range(len(letra_atual)):
                if linha_atual < 20 and coluna_atual + j < 10:
                    tabtetris[linha_atual][coluna_atual + j] = letra_atual[j]


# Exibir o tabtetris final
print_tabtetris()
